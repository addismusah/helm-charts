---
# Source: kutt/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-kutt
  labels:
    helm.sh/chart: kutt-0.1.0
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kutt/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-kutt
  labels:
    helm.sh/chart: kutt-0.1.0
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  ADMIN_EMAILS: ""
  CONTACT_EMAIL: ""
  CUSTOM_DOMAIN_USE_HTTPS: "false"
  DB_HOST: "RELEASE-NAME-kutt-postgres"
  DB_NAME: kutt
  DB_PASSWORD: pass
  DB_PORT: "5432"
  DB_SSL: "false"
  DB_USER: user
  DEFAULT_DOMAIN: example.com
  DEFAULT_DOMAIN: "example.com"
  DEFAULT_MAX_STATS_PER_LINK: "5000"
  DISALLOW_ANONYMOUS_LINKS: "false"
  DISALLOW_REGISTRATION: "false"
  GOOGLE_ANALYTICS: ""
  GOOGLE_ANALYTICS_UNIVERSAL: ""
  GOOGLE_SAFE_BROWSING_KEY: ""
  JWT_SECRET: securekey
  LINK_LENGTH: "6"
  MAIL_FROM: ""
  MAIL_HOST: ""
  MAIL_PASSWORD: ""
  MAIL_PORT: ""
  MAIL_SECURE: "true"
  MAIL_USER: ""
  NEO4J_DB_PASSWORD: pass
  NEO4J_DB_URI: bolt://localhost
  NEO4J_DB_USERNAME: neo4j
  NON_USER_COOLDOWN: "0"
  PORT: "3000"
  RECAPTCHA_SECRET_KEY: ""
  RECAPTCHA_SITE_KEY: ""
  REDIS_HOST: "RELEASE-NAME-kutt-redis"
  REDIS_PASSWORD: ""
  REDIS_PORT: "6379"
  REPORT_EMAIL: ""
  SITE_NAME: Kutt
  USER_LIMIT_PER_DAY: "50"
---
# Source: kutt/templates/postgres-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: RELEASE-NAME-kutt-postgres
  labels:
    app: RELEASE-NAME-kutt-postgres
    chart: "kutt-0.1.0"
    release: "RELEASE-NAME"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: kutt/templates/redis-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: RELEASE-NAME-kutt-redis
  labels:
    app: RELEASE-NAME-kutt-redis
    chart: "kutt-0.1.0"
    release: "RELEASE-NAME"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: kutt/templates/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-kutt-postgres
  labels:
    helm.sh/chart: kutt-0.1.0
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: RELEASE-NAME-kutt-postgres
---
# Source: kutt/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-kutt-redis
  labels:
    helm.sh/chart: kutt-0.1.0
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    app: RELEASE-NAME-kutt-redis
---
# Source: kutt/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-kutt
  labels:
    helm.sh/chart: kutt-0.1.0
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: kutt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-kutt
  labels:
    helm.sh/chart: kutt-0.1.0
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kutt
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kutt
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-kutt
      securityContext:
        {}
      containers:
        - name: kutt
          securityContext:
            {}
          image: "kutt/kutt:latest"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "./wait-for-it.sh RELEASE-NAME-kutt-postgres:5432 -- npm start"]
          envFrom:
            - configMapRef:
                name: RELEASE-NAME-kutt
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: kutt/templates/postgres-sts.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-kutt-postgres
spec:
  selector:
    matchLabels:
      app: RELEASE-NAME-kutt-postgres
  serviceName: "postgres"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: RELEASE-NAME-kutt-postgres
        chart: "kutt-0.1.0"
        release: "RELEASE-NAME"
        heritage: "Helm"
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: postgres
        image: "postgres:12-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: postgres
        env:
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-kutt
                key: DB_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-kutt
                key: DB_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-kutt
                key: DB_NAME
        volumeMounts:
        - name: postgres
          mountPath: /data
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: RELEASE-NAME-kutt-postgres
---
# Source: kutt/templates/redis-sts.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-kutt-redis
spec:
  selector:
    matchLabels:
      app: RELEASE-NAME-kutt-redis
  serviceName: "redis"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: RELEASE-NAME-kutt-redis
        chart: "kutt-0.1.0"
        release: "RELEASE-NAME"
        heritage: "Helm"
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: redis
        image: "redis:6.0-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis
          mountPath: /data
      volumes:
        - name: redis
          persistentVolumeClaim:
            claimName: RELEASE-NAME-kutt-redis
---
# Source: kutt/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: RELEASE-NAME-kutt
  labels:
    helm.sh/chart: kutt-0.1.0
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "example.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: RELEASE-NAME-kutt
                port:
                  number: 3000
---
# Source: kutt/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-kutt-test-connection"
  labels:
    helm.sh/chart: kutt-0.1.0
    app.kubernetes.io/name: kutt
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['RELEASE-NAME-kutt:3000']
  restartPolicy: Never
